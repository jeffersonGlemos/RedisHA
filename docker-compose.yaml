version: '2'

networks:
  back-tier:
  app-tier:
    driver: bridge

services:
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=str0ng_passw0rd
    networks:
      - app-tier
    ports:
      - '6379:6379'
  redis-slave:
    image: 'bitnami/redis:latest'
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis
      - REDIS_MASTER_PASSWORD=str0ng_passw0rd
      - REDIS_PASSWORD=str0ng_passw0rd
    ports:
      - '6379'
    depends_on:
      - redis
    networks:
      - app-tier
  redis-sentinel:
    image: 'bitnami/redis-sentinel:latest'
    environment:
      - REDIS_MASTER_PASSWORD=str0ng_passw0rd
    depends_on:
      - redis
      - redis-slave
    ports:
      - '26379-26381:26379'
    networks:
      - app-tier
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=str0ng_passw0rd
#      - SENTINEL_PORT=26379
#      - SENTINEL_HOST=redis-sentinel
#      - SENTINEL_PASSWORD=str0ng_passw0rd
#      - SENTINEL_NAME=redis-sentinel
    ports:
      - "8081:8081"
    networks:
      - app-tier
#
#  sentinel-metrics-exporter:
#    image: 'leominov/redis_sentinel_exporter'
#    environment:
#      - SENTINEL_ADDR=redis-sentinel:26379
#      - SENTINEL_PASSWORD=str0ng_passw0rd
#    ports:
#      - '9355'
#    networks:
#      - app-tier
#      - back-tier
